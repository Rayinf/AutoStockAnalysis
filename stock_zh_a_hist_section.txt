接口: stock_zh_a_hist

目标地址: https://quote.eastmoney.com/concept/sh603777.html?from=classic(示例)

描述: 东方财富-沪深京 A 股日频率数据; 历史数据按日频率更新, 当日收盘价请在收盘后获取

限量: 单次返回指定沪深京 A 股上市公司、指定周期和指定日期间的历史行情日频率数据

输入参数

| 名称         | 类型    | 描述                                                       |
|------------|-------|----------------------------------------------------------|
| symbol     | str   | symbol='603777'; 股票代码可以在 **ak.stock_zh_a_spot_em()** 中获取 |
| period     | str   | period='daily'; choice of {'daily', 'weekly', 'monthly'} |
| start_date | str   | start_date='20210301'; 开始查询的日期                           |
| end_date   | str   | end_date='20210616'; 结束查询的日期                             |
| adjust     | str   | 默认返回不复权的数据; qfq: 返回前复权后的数据; hfq: 返回后复权后的数据               |
| timeout    | float | timeout=None; 默认不设置超时参数                                  |

**股票数据复权**

1. 为何要复权：由于股票存在配股、分拆、合并和发放股息等事件，会导致股价出现较大的缺口。
若使用不复权的价格处理数据、计算各种指标，将会导致它们失去连续性，且使用不复权价格计算收益也会出现错误。
为了保证数据连贯性，常通过前复权和后复权对价格序列进行调整。

2. 前复权：保持当前价格不变，将历史价格进行增减，从而使股价连续。
前复权用来看盘非常方便，能一眼看出股价的历史走势，叠加各种技术指标也比较顺畅，是各种行情软件默认的复权方式。
这种方法虽然很常见，但也有两个缺陷需要注意。

    2.1 为了保证当前价格不变，每次股票除权除息，均需要重新调整历史价格，因此其历史价格是时变的。
这会导致在不同时点看到的历史前复权价可能出现差异。

    2.2 对于有持续分红的公司来说，前复权价可能出现负值。

3. 后复权：保证历史价格不变，在每次股票权益事件发生后，调整当前的股票价格。
后复权价格和真实股票价格可能差别较大，不适合用来看盘。
其优点在于，可以被看作投资者的长期财富增长曲线，反映投资者的真实收益率情况。

4. 在量化投资研究中普遍采用后复权数据。

输出参数-历史行情数据

| 名称   | 类型      | 描述          |
|------|---------|-------------|
| 日期   | object  | 交易日         |
| 股票代码 | object  | 不带市场标识的股票代码 |
| 开盘   | float64 | 开盘价         |
| 收盘   | float64 | 收盘价         |
| 最高   | float64 | 最高价         |
| 最低   | float64 | 最低价         |
| 成交量  | int64   | 注意单位: 手     |
| 成交额  | float64 | 注意单位: 元     |
| 振幅   | float64 | 注意单位: %     |
| 涨跌幅  | float64 | 注意单位: %     |
| 涨跌额  | float64 | 注意单位: 元     |
| 换手率  | float64 | 注意单位: %     |

接口示例-历史行情数据-不复权

```python
import akshare as ak

stock_zh_a_hist_df = ak.stock_zh_a_hist(symbol="000001", period="daily", start_date="20170301", end_date='20240528', adjust="")
print(stock_zh_a_hist_df)
```

数据示例-历史行情数据-不复权

```
            日期    股票代码   开盘   收盘  ... 振幅  涨跌幅  涨跌额 换手率
0     2017-03-01  000001   9.49   9.49  ...  0.84  0.11  0.01  0.21
1     2017-03-02  000001   9.51   9.43  ...  1.26 -0.63 -0.06  0.24
2     2017-03-03  000001   9.41   9.40  ...  0.74 -0.32 -0.03  0.20
3     2017-03-06  000001   9.40   9.45  ...  0.74  0.53  0.05  0.24
4     2017-03-07  000001   9.44   9.45  ...  0.63  0.00  0.00  0.17
...          ...     ...    ...    ...  ...   ...   ...   ...   ...
1755  2024-05-22  000001  11.56  11.56  ...  2.42  0.09  0.01  1.09
1756  2024-05-23  000001  11.53  11.40  ...  1.90 -1.38 -0.16  0.95
1757  2024-05-24  000001  11.37  11.31  ...  1.67 -0.79 -0.09  0.72
1758  2024-05-27  000001  11.31  11.51  ...  1.95  1.77  0.20  0.75
1759  2024-05-28  000001  11.50  11.40  ...  1.91 -0.96 -0.11  0.62
[1760 rows x 12 columns]
```

接口示例-历史行情数据-前复权

```python
import akshare as ak

stock_zh_a_hist_df = ak.stock_zh_a_hist(symbol="000001", period="daily", start_date="20170301", end_date='20240528', adjust="qfq")
print(stock_zh_a_hist_df)
```

数据示例-历史行情数据-前复权

```
           日期    股票代码   开盘    收盘  ...  振幅  涨跌幅  涨跌额 换手率
0     2017-03-01  000001   8.14   8.14  ...  0.98  0.12  0.01  0.21
1     2017-03-02  000001   8.16   8.08  ...  1.47 -0.74 -0.06  0.24
2     2017-03-03  000001   8.06   8.05  ...  0.87 -0.37 -0.03  0.20
3     2017-03-06  000001   8.05   8.10  ...  0.87  0.62  0.05  0.24
4     2017-03-07  000001   8.09   8.10  ...  0.74  0.00  0.00  0.17
...          ...     ...    ...    ...  ...   ...   ...   ...   ...
1755  2024-05-22  000001  11.56  11.56  ...  2.42  0.09  0.01  1.09
1756  2024-05-23  000001  11.53  11.40  ...  1.90 -1.38 -0.16  0.95
1757  2024-05-24  000001  11.37  11.31  ...  1.67 -0.79 -0.09  0.72
1758  2024-05-27  000001  11.31  11.51  ...  1.95  1.77  0.20  0.75
1759  2024-05-28  000001  11.50  11.40  ...  1.91 -0.96 -0.11  0.62
[1760 rows x 12 columns]
```

接口示例-历史行情数据-后复权

```python
import akshare as ak

stock_zh_a_hist_df = ak.stock_zh_a_hist(symbol="000001", period="daily", start_date="20170301", end_date='20240528', adjust="hfq")
print(stock_zh_a_hist_df)
```

数据示例-历史行情数据-后复权

```
           日期    股票代码   开盘     收盘  ...    振幅   涨跌幅   涨跌额 换手率
0     2017-03-01  000001  1575.20  1575.20  ...  0.83  0.10   1.63  0.21
1     2017-03-02  000001  1578.45  1565.45  ...  1.24 -0.62  -9.75  0.24
2     2017-03-03  000001  1562.20  1560.57  ...  0.73 -0.31  -4.88  0.20
3     2017-03-06  000001  1560.57  1568.70  ...  0.73  0.52   8.13  0.24
4     2017-03-07  000001  1567.07  1568.70  ...  0.62  0.00   0.00  0.17
...          ...     ...      ...      ...  ...   ...   ...    ...   ...
1755  2024-05-22  000001  2131.04  2131.04  ...  2.14  0.08   1.62  1.09
1756  2024-05-23  000001  2126.17  2105.04  ...  1.68 -1.22 -26.00  0.95
1757  2024-05-24  000001  2100.16  2090.41  ...  1.47 -0.69 -14.63  0.72
1758  2024-05-27  000001  2090.41  2122.92  ...  1.71  1.56  32.51  0.75
1759  2024-05-28  000001  2121.29  2105.04  ...  1.68 -0.84 -17.88  0.62
[1760 rows x 12 columns]
```

##### 历史行情数据-新浪

接口: stock_zh_a_daily

P.S. 建议切换为 stock_zh_a_hist 接口使用(该接口数据质量高, 访问无限制)

目标地址: https://finance.sina.com.cn/realstock/company/sh600006/nc.shtml(示例)

描述: 新浪财经-沪深京 A 股的数据, 历史数据按日频率更新; 注意其中的 **sh689009** 为 CDR, 请 通过 **ak.stock_zh_a_cdr_daily** 接口获取

限量: 单次返回指定沪深京 A 股上市公司指定日期间的历史行情日频率数据, 多次获取容易封禁 IP

输入参数

| 名称         | 类型  | 描述                                                                                   |
|------------|-----|--------------------------------------------------------------------------------------|
| symbol     | str | symbol='sh600000'; 股票代码可以在 **ak.stock_zh_a_spot()** 中获取                              |
| start_date | str | start_date='20201103'; 开始查询的日期                                                       |
| end_date   | str | end_date='20201116'; 结束查询的日期                                                         |
| adjust     | str | 默认返回不复权的数据; qfq: 返回前复权后的数据; hfq: 返回后复权后的数据; hfq-factor: 返回后复权因子; qfq-factor: 返回前复权因子 |

**股票数据复权**

1.为何要复权：由于股票存在配股、分拆、合并和发放股息等事件，会导致股价出现较大的缺口。
若使用不复权的价格处理数据、计算各种指标，将会导致它们失去连续性，且使用不复权价格计算收益也会出现错误。
为了保证数据连贯性，常通过前复权和后复权对价格序列进行调整。

2.前复权：保持当前价格不变，将历史价格进行增减，从而使股价连续。
前复权用来看盘非常方便，能一眼看出股价的历史走势，叠加各种技术指标也比较顺畅，是各种行情软件默认的复权方式。
这种方法虽然很常见，但也有两个缺陷需要注意。

2.1 为了保证当前价格不变，每次股票除权除息，均需要重新调整历史价格，因此其历史价格是时变的。
这会导致在不同时点看到的历史前复权价可能出现差异。

2.2 对于有持续分红的公司来说，前复权价可能出现负值。

3.后复权：保证历史价格不变，在每次股票权益事件发生后，调整当前的股票价格。
后复权价格和真实股票价格可能差别较大，不适合用来看盘。
其优点在于，可以被看作投资者的长期财富增长曲线，反映投资者的真实收益率情况。

4.在量化投资研究中普遍采用后复权数据。

输出参数-历史行情数据

| 名称                | 类型      | 描述            |
|-------------------|---------|---------------|
| date              | object  | 交易日           |
| open              | float64 | 开盘价           |
| high              | float64 | 最高价           |
| low               | float64 | 最低价           |
| close             | float64 | 收盘价           |
| volume            | float64 | 成交量; 注意单位: 股  |
| amount            | float64 | 成交额; 注意单位: 元  |
| outstanding_share | float64 | 流动股本; 注意单位: 股 |
| turnover          | float64 | 换手率=成交量/流动股本  |

接口示例-历史行情数据(前复权)

```python
import akshare as ak

stock_zh_a_daily_qfq_df = ak.stock_zh_a_daily(symbol="sz000001", start_date="19910403", end_date="20231027", adjust="qfq")
print(stock_zh_a_daily_qfq_df)
```

数据示例-历史行情数据(前复权)

```
           date   open   high  ...        amount  outstanding_share  turnover
0    1991-04-03   0.39   0.39  ...  5.000000e+03       3.710000e+07  0.000003
1    1991-04-04   0.39   0.39  ...  1.500000e+04       3.710000e+07  0.000008
2    1991-04-05   0.38   0.38  ...  1.000000e+04       3.710000e+07  0.000005
3    1991-04-08   0.38   0.38  ...  1.000000e+04       3.710000e+07  0.000005
4    1991-04-09   0.38   0.38  ...  1.900000e+04       3.710000e+07  0.000011
         ...    ...    ...  ...           ...                ...       ...
7730 2023-10-23  10.59  10.60  ...  5.570322e+08       1.940555e+10  0.002733
7731 2023-10-24  10.54  10.61  ...  8.015284e+08       1.940555e+10  0.003920
7732 2023-10-25  10.51  10.54  ...  1.470972e+09       1.940555e+10  0.007273
7733 2023-10-26  10.31  10.42  ...  6.219153e+08       1.940555e+10  0.003092
7734 2023-10-27  10.38  10.48  ...  9.575875e+08       1.940555e+10  0.004740
[7735 rows x 9 columns]
```

接口示例-历史行情数据(后复权)

```python
import akshare as ak

stock_zh_a_daily_hfq_df = ak.stock_zh_a_daily(symbol="sz000001", start_date="19910403", end_date="20231027", adjust="hfq")
print(stock_zh_a_daily_hfq_df)
```

数据示例-历史行情数据(后复权)

```
           date     open     high  ...        amount  outstanding_share  turnover
0    1991-04-03    49.00    49.00  ...  5.000000e+03       3.710000e+07  0.000003
1    1991-04-04    48.76    48.76  ...  1.500000e+04       3.710000e+07  0.000008
2    1991-04-05    48.52    48.52  ...  1.000000e+04       3.710000e+07  0.000005
3    1991-04-08    48.04    48.04  ...  1.000000e+04       3.710000e+07  0.000005
4    1991-04-09    47.80    47.80  ...  1.900000e+04       3.710000e+07  0.000011
         ...      ...      ...  ...           ...                ...       ...
7730 2023-10-23  1341.02  1342.28  ...  5.570322e+08       1.940555e+10  0.002733
7731 2023-10-24  1334.69  1343.55  ...  8.015284e+08       1.940555e+10  0.003920
7732 2023-10-25  1330.89  1334.69  ...  1.470972e+09       1.940555e+10  0.007273
7733 2023-10-26  1305.56  1319.49  ...  6.219153e+08       1.940555e+10  0.003092
7734 2023-10-27  1314.42  1327.09  ...  9.575875e+08       1.940555e+10  0.004740
[7735 rows x 9 columns]
```

接口示例-前复权因子

```python
import akshare as ak

qfq_factor_df = ak.stock_zh_a_daily(symbol="sz000002", adjust="qfq-factor")
print(qfq_factor_df)
```

数据示例-前复权因子

```
         date            qfq_factor
0  2023-08-25    1.0000000000000000
1  2022-08-25    1.0517754291451000
2  2021-08-25    1.1168798473057000
3  2020-08-14    1.1810093745970000
4  2019-08-15    1.2245366427798000
5  2018-08-23    1.2735981991808000
6  2017-08-29    1.3233913520593000
7  2016-07-29    1.3684162947004000
8  2015-07-21    1.4256988372693000
9  2014-05-08    1.4737021651235000
10 2013-05-16    1.5546965200431000
11 2012-07-05    1.5798398599899000
12 2011-05-27    1.6027105929296000
13 2010-05-18    1.6232581646338000
14 2009-06-08    1.6398462042724000
15 2008-06-16    1.6475522484654000
16 2007-05-16    2.6521572780175000
17 2006-07-21    4.0043855834397000
18 2005-06-29    4.1056769557021000
19 2004-05-26    6.3462750504298000
20 2003-05-23    9.5848830885446000
21 2002-07-17   19.4514673699928000
22 2001-08-21   19.7687833140383020
23 2000-08-17   20.0160648287379000
24 2000-01-10   20.2241320306998030
25 1999-08-06   21.7007260053956000
26 1998-07-10   24.0549868667835000
27 1997-07-14   26.7769985385511000
28 1997-06-27   31.2296603923877000
29 1996-08-06   36.0689784010141000
30 1995-07-04   40.3371408451341000
31 1994-06-21   47.9136235499274000
32 1993-04-05   65.9178076663026900
33 1992-03-30   99.0712868582592000
34 1991-06-10  118.8855442299110900
35 1991-01-29  169.1453113717332000
36 1900-01-01  169.1453113717332000
```

接口示例-后复权因子

```python
import akshare as ak

hfq_factor_df = ak.stock_zh_a_daily(symbol="sz000002", adjust="hfq-factor")
print(hfq_factor_df)
```

数据示例-后复权因子

```
         date            hfq_factor
0  2023-08-25  169.1453113717332000
1  2022-08-25  160.8188465756604000
2  2021-08-25  151.4445011965874000
3  2020-08-14  143.2209726780933200
4  2019-08-15  138.1300530033661900
5  2018-08-23  132.8090063887726200
6  2017-08-29  127.8120120012352000
7  2016-07-29  123.6066188533395000
8  2015-07-21  118.6402814886964000
9  2014-05-08  114.7757772056770000
10 2013-05-16  108.7963529802224000
11 2012-07-05  107.0648460362401000
12 2011-05-27  105.5370271575670000
13 2010-05-18  104.2011154213954000
14 2009-06-08  103.1470578954563000
15 2008-06-16  102.6646114132513100
16 2007-05-16   63.7765010294439100
17 2006-07-21   42.2400160641971000
18 2005-06-29   41.1979104047185000
19 2004-05-26   26.6526915438809980
20 2003-05-23   17.6470917599285000
21 2002-07-17    8.6957610011813000
22 2001-08-21    8.5561821729119010
23 2000-08-17    8.4504777946604000
24 2000-01-10    8.3635387226989000
25 1999-08-06    7.7944540348408990
26 1998-07-10    7.0316110463273000
27 1997-07-14    6.3168137059205000
28 1997-06-27    5.4161751759863000
29 1996-08-06    4.6894954853220000
30 1995-07-04    4.1932895546844000
31 1994-06-21    3.5302133055222000
32 1993-04-05    2.5660032904614000
33 1992-03-30    1.7073091178651000
34 1991-06-10    1.4227575982209000
35 1991-01-29    1.0000000000000000
36 1900-01-01    1.0000000000000000
```

##### 历史行情数据-腾讯

